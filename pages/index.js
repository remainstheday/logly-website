import Head from 'next/head'
import {Formik} from "formik";
import * as Yup from 'yup';

const registrationSchema = Yup.object().shape({
    siteId: Yup.string()
        .min(3, 'too short!')
        .max(50, 'too long!')
        .required('Required'),
    email: Yup.string()
        .email('Invalid email')
        .required('Required'),
    password: Yup.string()
        .min(8, 'too short')
        .required('required')
})

export default function Home() {
const postFormData = async (values) => {
    console.log(values)
   await fetch('http://localhost:3000/api/newUser', {
        method: 'POST',
       headers: {
            'Content-Type': 'application/json'
       },
        body: JSON.stringify(values)
    }).then(response => response.json()).then(data => {
        console.log(data)
   })
}
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="mx-auto">
          <div>
              <h1>Welcome to Logly</h1>
              <Formik
                  initialValues={{siteId: '', name: '', email: '', password: '' }}
                  validationSchema={registrationSchema}
                  onSubmit={(values, { setSubmitting }) => {
                      postFormData(values);
                  }}
              >
                  {({
                        values,
                        errors,
                        touched,
                        handleChange,
                        handleBlur,
                        handleSubmit,
                        isSubmitting,
                        /* and other goodies */
                    }) => (
                      <form onSubmit={handleSubmit} className="space-y-2 rounded">
                          <input type="text"
                                 className="mb-2"
                                 placeholder="Org/Site Name"
                                 name="siteId"
                                 onChange={handleChange}
                                 onBlur={handleBlur}
                                 value={values.siteId}/>
                          {errors.siteId && touched.siteId && errors.siteId}
                          <br/>
                          <input type="text"
                                 placeholder="Full Name"
                                 name="name"
                                 onChange={handleChange}
                                 onBlur={handleBlur}
                                 value={values.name}/>
                          {errors.name && touched.name && errors.name}
                          <br/>
                          <input
                              type="email"
                              name="email"
                              placeholder="email"
                              onChange={handleChange}
                              onBlur={handleBlur}
                              value={values.email}
                          />
                          {errors.email && touched.email && errors.email}
                          <br/>
                          <input
                              type="password"
                              name="password"
                              placeholder="password"
                              onChange={handleChange}
                              onBlur={handleBlur}
                              value={values.password}
                          />
                          <br/>
                          {errors.password && touched.password && errors.password}
                          <button type="submit" disabled={isSubmitting}>
                              Submit
                          </button>
                      </form>
                  )}
              </Formik>
          </div>
      </main>
    </div>
  )
}
